"""all models

Revision ID: 2caaf65401f1
Revises: 
Create Date: 2025-05-01 11:48:42.494041

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2caaf65401f1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mitre_collections',
    sa.Column('collection', sa.String(), nullable=False, comment='Unique collection name/key'),
    sa.Column('hidden', sa.Boolean(), nullable=False, comment='Whether hidden in the UI'),
    sa.Column('singleton', sa.Boolean(), nullable=False, comment='True if only one record allowed'),
    sa.Column('icon', sa.JSON(), nullable=True, comment='UI icon metadata'),
    sa.Column('note', sa.JSON(), nullable=True, comment='Arbitrary notes/metadata'),
    sa.Column('translations', sa.JSON(), nullable=True, comment='Multilanguage labels'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection')
    )
    op.create_index('idx_mitre_collections_hidden', 'mitre_collections', ['hidden'], unique=False)
    op.create_table('mitre_navigation',
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['parent_id'], ['mitre_navigation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mitre_taxonomy',
    sa.Column('vocabulary', sa.String(), nullable=False),
    sa.Column('term', sa.String(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['parent_id'], ['mitre_taxonomy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mitre_taxonomy_term'), 'mitre_taxonomy', ['term'], unique=False)
    op.create_index(op.f('ix_mitre_taxonomy_vocabulary'), 'mitre_taxonomy', ['vocabulary'], unique=False)
    op.create_table('mitre_users',
    sa.Column('email', sa.String(length=254), nullable=False, comment='Unique email address for login and notifications'),
    sa.Column('username', sa.String(length=50), nullable=True, comment='Optional unique username for login'),
    sa.Column('hashed_password', sa.Text(), nullable=True, comment='Hashed password for username/password login (null for OAuth-only users)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the user account is active'),
    sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='Whether the user has admin privileges'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Account creation timestamp'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='Timestamp of last successful login'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mitre_users_email', 'mitre_users', ['email'], unique=False)
    op.create_index('idx_mitre_users_username', 'mitre_users', ['username'], unique=False)
    op.create_index(op.f('ix_mitre_users_email'), 'mitre_users', ['email'], unique=True)
    op.create_index(op.f('ix_mitre_users_username'), 'mitre_users', ['username'], unique=True)
    op.create_table('mitre_fields',
    sa.Column('collection', sa.String(), nullable=False, comment='FK to collection this field belongs to'),
    sa.Column('field', sa.String(), nullable=False, comment='Field/column name in the collection'),
    sa.Column('type', sa.String(), nullable=False, comment='Data type (string, integer, etc.)'),
    sa.Column('schema', sa.JSON(), nullable=True, comment='Raw column definition JSON'),
    sa.Column('interface', sa.JSON(), nullable=True, comment='UI interface settings'),
    sa.Column('options', sa.JSON(), nullable=True, comment='Additional UI options'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['mitre_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mitre_fields_collection_field', 'mitre_fields', ['collection', 'field'], unique=False)
    op.create_index(op.f('ix_mitre_fields_collection'), 'mitre_fields', ['collection'], unique=False)
    op.create_index(op.f('ix_mitre_fields_field'), 'mitre_fields', ['field'], unique=True)
    op.create_index(op.f('ix_mitre_fields_type'), 'mitre_fields', ['type'], unique=False)
    op.create_table('mitre_oauth_identities',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to the associated user'),
    sa.Column('provider', sa.String(length=50), nullable=False, comment='OAuth provider (e.g., google, github)'),
    sa.Column('provider_user_id', sa.String(length=255), nullable=False, comment='Unique user ID from the OAuth provider'),
    sa.Column('access_token', sa.Text(), nullable=True, comment='OAuth access token (if stored)'),
    sa.Column('refresh_token', sa.Text(), nullable=True, comment='OAuth refresh token (if stored)'),
    sa.Column('token_expiry', sa.DateTime(), nullable=True, comment='Expiry timestamp for access token'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Identity creation timestamp'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['user_id'], ['mitre_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mitre_oauth_identities_provider_user_id', 'mitre_oauth_identities', ['provider', 'provider_user_id'], unique=False)
    op.create_index(op.f('ix_mitre_oauth_identities_user_id'), 'mitre_oauth_identities', ['user_id'], unique=False)
    op.create_table('mitre_refresh_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to the associated user'),
    sa.Column('token', sa.Text(), nullable=False, comment='Refresh token string'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='Token expiry timestamp'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Token creation timestamp'),
    sa.Column('is_revoked', sa.Boolean(), nullable=False, comment='Whether the token is revoked'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['user_id'], ['mitre_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mitre_refresh_tokens_token', 'mitre_refresh_tokens', ['token'], unique=False)
    op.create_index(op.f('ix_mitre_refresh_tokens_token'), 'mitre_refresh_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_mitre_refresh_tokens_user_id'), 'mitre_refresh_tokens', ['user_id'], unique=False)
    op.create_table('mitre_revisions',
    sa.Column('collection', sa.String(), nullable=False, comment='CreateCollection the revision belongs to'),
    sa.Column('item_id', sa.UUID(), nullable=False, comment='Original item ID this revision represents'),
    sa.Column('data', sa.JSON(), nullable=False, comment='Snapshot of item data'),
    sa.Column('status', sa.String(), nullable=False, comment='Revision status: draft, published, archived'),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['mitre_collections.collection'], ),
    sa.ForeignKeyConstraint(['created_by'], ['mitre_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mitre_revisions_collection'), 'mitre_revisions', ['collection'], unique=False)
    op.create_index(op.f('ix_mitre_revisions_item_id'), 'mitre_revisions', ['item_id'], unique=False)
    op.create_index(op.f('ix_mitre_revisions_status'), 'mitre_revisions', ['status'], unique=False)
    op.create_table('mitre_translations',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['mitre_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mitre_relations',
    sa.Column('many_collection', sa.String(), nullable=False, comment="CreateCollection on the 'many' side"),
    sa.Column('one_collection', sa.String(), nullable=False, comment="CreateCollection on the 'one' side"),
    sa.Column('field_many', sa.String(), nullable=False, comment='Field in many_collection'),
    sa.Column('field_one', sa.String(), nullable=False, comment='Field in one_collection'),
    sa.Column('type', sa.String(), nullable=False, comment='Relation type: m2o, o2m, m2m'),
    sa.Column('junction', sa.String(), nullable=True, comment='Junction table for m2m relations'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['field_many'], ['mitre_fields.field'], ),
    sa.ForeignKeyConstraint(['field_one'], ['mitre_fields.field'], ),
    sa.ForeignKeyConstraint(['many_collection'], ['mitre_collections.collection'], ),
    sa.ForeignKeyConstraint(['one_collection'], ['mitre_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mitre_relations_many_one', 'mitre_relations', ['many_collection', 'one_collection'], unique=False)
    op.create_index(op.f('ix_mitre_relations_field_many'), 'mitre_relations', ['field_many'], unique=False)
    op.create_index(op.f('ix_mitre_relations_field_one'), 'mitre_relations', ['field_one'], unique=False)
    op.create_index(op.f('ix_mitre_relations_many_collection'), 'mitre_relations', ['many_collection'], unique=False)
    op.create_index(op.f('ix_mitre_relations_one_collection'), 'mitre_relations', ['one_collection'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mitre_relations_one_collection'), table_name='mitre_relations')
    op.drop_index(op.f('ix_mitre_relations_many_collection'), table_name='mitre_relations')
    op.drop_index(op.f('ix_mitre_relations_field_one'), table_name='mitre_relations')
    op.drop_index(op.f('ix_mitre_relations_field_many'), table_name='mitre_relations')
    op.drop_index('idx_mitre_relations_many_one', table_name='mitre_relations')
    op.drop_table('mitre_relations')
    op.drop_table('mitre_translations')
    op.drop_index(op.f('ix_mitre_revisions_status'), table_name='mitre_revisions')
    op.drop_index(op.f('ix_mitre_revisions_item_id'), table_name='mitre_revisions')
    op.drop_index(op.f('ix_mitre_revisions_collection'), table_name='mitre_revisions')
    op.drop_table('mitre_revisions')
    op.drop_index(op.f('ix_mitre_refresh_tokens_user_id'), table_name='mitre_refresh_tokens')
    op.drop_index(op.f('ix_mitre_refresh_tokens_token'), table_name='mitre_refresh_tokens')
    op.drop_index('idx_mitre_refresh_tokens_token', table_name='mitre_refresh_tokens')
    op.drop_table('mitre_refresh_tokens')
    op.drop_index(op.f('ix_mitre_oauth_identities_user_id'), table_name='mitre_oauth_identities')
    op.drop_index('idx_mitre_oauth_identities_provider_user_id', table_name='mitre_oauth_identities')
    op.drop_table('mitre_oauth_identities')
    op.drop_index(op.f('ix_mitre_fields_type'), table_name='mitre_fields')
    op.drop_index(op.f('ix_mitre_fields_field'), table_name='mitre_fields')
    op.drop_index(op.f('ix_mitre_fields_collection'), table_name='mitre_fields')
    op.drop_index('idx_mitre_fields_collection_field', table_name='mitre_fields')
    op.drop_table('mitre_fields')
    op.drop_index(op.f('ix_mitre_users_username'), table_name='mitre_users')
    op.drop_index(op.f('ix_mitre_users_email'), table_name='mitre_users')
    op.drop_index('idx_mitre_users_username', table_name='mitre_users')
    op.drop_index('idx_mitre_users_email', table_name='mitre_users')
    op.drop_table('mitre_users')
    op.drop_index(op.f('ix_mitre_taxonomy_vocabulary'), table_name='mitre_taxonomy')
    op.drop_index(op.f('ix_mitre_taxonomy_term'), table_name='mitre_taxonomy')
    op.drop_table('mitre_taxonomy')
    op.drop_table('mitre_navigation')
    op.drop_index('idx_mitre_collections_hidden', table_name='mitre_collections')
    op.drop_table('mitre_collections')
    # ### end Alembic commands ###
