"""all models

Revision ID: 339ab5bca58c
Revises: 
Create Date: 2025-10-08 13:17:03.251064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '339ab5bca58c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('luca_collections',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('singleton', sa.Boolean(), nullable=False),
    sa.Column('icon', sa.JSON(), nullable=True),
    sa.Column('note', sa.JSON(), nullable=True),
    sa.Column('translations', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection')
    )
    op.create_index('idx_luca_collections_hidden', 'luca_collections', ['hidden'], unique=False)
    op.create_table('luca_device_groups',
    sa.Column('name', sa.String(), nullable=False, comment='Logical group of devices'),
    sa.Column('description', sa.String(), nullable=True, comment='Description of the device group'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('luca_device_types',
    sa.Column('name', sa.String(), nullable=False, comment='Type identifier for devices'),
    sa.Column('description', sa.String(), nullable=True, comment='Description of device type capabilities'),
    sa.Column('schema', sa.JSON(), nullable=True, comment='Optional telemetry data schema'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('luca_navigation',
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['parent_id'], ['luca_navigation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('luca_taxonomy',
    sa.Column('vocabulary', sa.String(), nullable=False),
    sa.Column('term', sa.String(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['parent_id'], ['luca_taxonomy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_luca_taxonomy_term'), 'luca_taxonomy', ['term'], unique=False)
    op.create_index(op.f('ix_luca_taxonomy_vocabulary'), 'luca_taxonomy', ['vocabulary'], unique=False)
    op.create_table('luca_users',
    sa.Column('email', sa.String(length=254), nullable=False, comment='Unique email address for login and notifications'),
    sa.Column('username', sa.String(length=50), nullable=True, comment='Optional unique username for login'),
    sa.Column('hashed_password', sa.Text(), nullable=True, comment='Hashed password for username/password login (null for OAuth-only users)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the user account is active'),
    sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='Whether the user has admin privileges'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Account creation timestamp'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='Timestamp of last successful login'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_users_email', 'luca_users', ['email'], unique=False)
    op.create_index('idx_luca_users_username', 'luca_users', ['username'], unique=False)
    op.create_index(op.f('ix_luca_users_email'), 'luca_users', ['email'], unique=True)
    op.create_index(op.f('ix_luca_users_username'), 'luca_users', ['username'], unique=True)
    op.create_table('luca_content',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False, comment='Timestamp of last content change'),
    sa.Column('version', sa.Integer(), nullable=False, comment='Incrementing version for optimistic locking'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['luca_collections.collection'], ),
    sa.ForeignKeyConstraint(['created_by'], ['luca_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_content_collection_status_lastmod', 'luca_content', ['collection', 'status', 'last_modified'], unique=False)
    op.create_index('idx_luca_content_collection_status', 'luca_content', ['collection', 'status'], unique=False)
    op.create_index('idx_luca_content_created_by', 'luca_content', ['created_by'], unique=False)
    op.create_index(op.f('ix_luca_content_collection'), 'luca_content', ['collection'], unique=False)
    op.create_index(op.f('ix_luca_content_created_by'), 'luca_content', ['created_by'], unique=False)
    op.create_index(op.f('ix_luca_content_is_draft'), 'luca_content', ['is_draft'], unique=False)
    op.create_index(op.f('ix_luca_content_status'), 'luca_content', ['status'], unique=False)
    op.create_table('luca_devices',
    sa.Column('name', sa.String(), nullable=False, comment='Human-readable device name'),
    sa.Column('device_type', sa.String(), nullable=False, comment='Type of this device'),
    sa.Column('group', sa.String(), nullable=True, comment='Group this device belongs to'),
    sa.Column('status', sa.String(), nullable=False, comment='Current device status: online/offline/error'),
    sa.Column('last_seen', sa.DateTime(), nullable=True, comment='Last heartbeat timestamp'),
    sa.Column('provisioned', sa.Boolean(), nullable=False, comment='Whether provisioning is complete'),
    sa.Column('credentials', sa.JSON(), nullable=True, comment='Provisioning credentials or cert thumbprints'),
    sa.Column('properties', sa.JSON(), nullable=True, comment='Additional device-specific properties'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['device_type'], ['luca_device_types.name'], ),
    sa.ForeignKeyConstraint(['group'], ['luca_device_groups.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_luca_devices_device_type'), 'luca_devices', ['device_type'], unique=False)
    op.create_index(op.f('ix_luca_devices_group'), 'luca_devices', ['group'], unique=False)
    op.create_index(op.f('ix_luca_devices_name'), 'luca_devices', ['name'], unique=False)
    op.create_index(op.f('ix_luca_devices_status'), 'luca_devices', ['status'], unique=False)
    op.create_table('luca_fields',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('schema', sa.JSON(), nullable=True),
    sa.Column('interface', sa.JSON(), nullable=True),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['luca_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_fields_collection_field', 'luca_fields', ['collection', 'field'], unique=False)
    op.create_index(op.f('ix_luca_fields_collection'), 'luca_fields', ['collection'], unique=False)
    op.create_index(op.f('ix_luca_fields_field'), 'luca_fields', ['field'], unique=True)
    op.create_index(op.f('ix_luca_fields_type'), 'luca_fields', ['type'], unique=False)
    op.create_table('luca_oauth_identities',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to the associated user'),
    sa.Column('provider', sa.String(length=50), nullable=False, comment='OAuth provider (e.g., google, github)'),
    sa.Column('provider_user_id', sa.String(length=255), nullable=False, comment='Unique user ID from the OAuth provider'),
    sa.Column('access_token', sa.Text(), nullable=True, comment='OAuth access token (if stored)'),
    sa.Column('refresh_token', sa.Text(), nullable=True, comment='OAuth refresh token (if stored)'),
    sa.Column('token_expiry', sa.DateTime(), nullable=True, comment='Expiry timestamp for access token'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Identity creation timestamp'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['user_id'], ['luca_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_oauth_identities_provider_user_id', 'luca_oauth_identities', ['provider', 'provider_user_id'], unique=False)
    op.create_index(op.f('ix_luca_oauth_identities_user_id'), 'luca_oauth_identities', ['user_id'], unique=False)
    op.create_table('luca_refresh_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to the associated user'),
    sa.Column('token', sa.Text(), nullable=False, comment='Refresh token string'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='Token expiry timestamp'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Token creation timestamp'),
    sa.Column('is_revoked', sa.Boolean(), nullable=False, comment='Whether the token is revoked'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['user_id'], ['luca_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_refresh_tokens_token', 'luca_refresh_tokens', ['token'], unique=False)
    op.create_index(op.f('ix_luca_refresh_tokens_token'), 'luca_refresh_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_luca_refresh_tokens_user_id'), 'luca_refresh_tokens', ['user_id'], unique=False)
    op.create_table('luca_revisions',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['luca_collections.collection'], ),
    sa.ForeignKeyConstraint(['created_by'], ['luca_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_luca_revisions_collection'), 'luca_revisions', ['collection'], unique=False)
    op.create_index(op.f('ix_luca_revisions_item_id'), 'luca_revisions', ['item_id'], unique=False)
    op.create_index(op.f('ix_luca_revisions_status'), 'luca_revisions', ['status'], unique=False)
    op.create_table('luca_translations',
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['collection'], ['luca_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('luca_device_events',
    sa.Column('device_id', sa.UUID(), nullable=False, comment='FK to the device generating the event'),
    sa.Column('event_type', sa.String(), nullable=False, comment='Type of event (telemetry, alert, status)'),
    sa.Column('payload', sa.JSON(), nullable=False, comment='Event data payload'),
    sa.Column('timestamp', sa.DateTime(), nullable=False, comment='Event generation timestamp'),
    sa.Column('processed', sa.Boolean(), nullable=False, comment='Whether the event has been processed by workflows'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['device_id'], ['luca_devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_device_events_device_id', 'luca_device_events', ['device_id'], unique=False)
    op.create_index('idx_luca_device_events_timestamp', 'luca_device_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_luca_device_events_device_id'), 'luca_device_events', ['device_id'], unique=False)
    op.create_table('luca_relations',
    sa.Column('many_collection', sa.String(), nullable=False),
    sa.Column('one_collection', sa.String(), nullable=False),
    sa.Column('field_many', sa.String(), nullable=False),
    sa.Column('field_one', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('junction', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['field_many'], ['luca_fields.field'], ),
    sa.ForeignKeyConstraint(['field_one'], ['luca_fields.field'], ),
    sa.ForeignKeyConstraint(['many_collection'], ['luca_collections.collection'], ),
    sa.ForeignKeyConstraint(['one_collection'], ['luca_collections.collection'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_relations_many_one', 'luca_relations', ['many_collection', 'one_collection'], unique=False)
    op.create_index(op.f('ix_luca_relations_field_many'), 'luca_relations', ['field_many'], unique=False)
    op.create_index(op.f('ix_luca_relations_field_one'), 'luca_relations', ['field_one'], unique=False)
    op.create_index(op.f('ix_luca_relations_many_collection'), 'luca_relations', ['many_collection'], unique=False)
    op.create_index(op.f('ix_luca_relations_one_collection'), 'luca_relations', ['one_collection'], unique=False)
    op.create_table('luca_sync_logs',
    sa.Column('device_id', sa.UUID(), nullable=False, comment='FK to the device performing sync'),
    sa.Column('collection', sa.String(), nullable=False, comment='Collection being synced'),
    sa.Column('last_synced_at', sa.DateTime(), nullable=False, comment='Last successful sync timestamp'),
    sa.Column('conflict_count', sa.Integer(), nullable=False, comment='Number of conflicts detected'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Universal primary key UUID'),
    sa.ForeignKeyConstraint(['device_id'], ['luca_devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_luca_sync_logs_device_id_collection', 'luca_sync_logs', ['device_id', 'collection'], unique=False)
    op.create_index(op.f('ix_luca_sync_logs_device_id'), 'luca_sync_logs', ['device_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_luca_sync_logs_device_id'), table_name='luca_sync_logs')
    op.drop_index('idx_luca_sync_logs_device_id_collection', table_name='luca_sync_logs')
    op.drop_table('luca_sync_logs')
    op.drop_index(op.f('ix_luca_relations_one_collection'), table_name='luca_relations')
    op.drop_index(op.f('ix_luca_relations_many_collection'), table_name='luca_relations')
    op.drop_index(op.f('ix_luca_relations_field_one'), table_name='luca_relations')
    op.drop_index(op.f('ix_luca_relations_field_many'), table_name='luca_relations')
    op.drop_index('idx_luca_relations_many_one', table_name='luca_relations')
    op.drop_table('luca_relations')
    op.drop_index(op.f('ix_luca_device_events_device_id'), table_name='luca_device_events')
    op.drop_index('idx_luca_device_events_timestamp', table_name='luca_device_events')
    op.drop_index('idx_luca_device_events_device_id', table_name='luca_device_events')
    op.drop_table('luca_device_events')
    op.drop_table('luca_translations')
    op.drop_index(op.f('ix_luca_revisions_status'), table_name='luca_revisions')
    op.drop_index(op.f('ix_luca_revisions_item_id'), table_name='luca_revisions')
    op.drop_index(op.f('ix_luca_revisions_collection'), table_name='luca_revisions')
    op.drop_table('luca_revisions')
    op.drop_index(op.f('ix_luca_refresh_tokens_user_id'), table_name='luca_refresh_tokens')
    op.drop_index(op.f('ix_luca_refresh_tokens_token'), table_name='luca_refresh_tokens')
    op.drop_index('idx_luca_refresh_tokens_token', table_name='luca_refresh_tokens')
    op.drop_table('luca_refresh_tokens')
    op.drop_index(op.f('ix_luca_oauth_identities_user_id'), table_name='luca_oauth_identities')
    op.drop_index('idx_luca_oauth_identities_provider_user_id', table_name='luca_oauth_identities')
    op.drop_table('luca_oauth_identities')
    op.drop_index(op.f('ix_luca_fields_type'), table_name='luca_fields')
    op.drop_index(op.f('ix_luca_fields_field'), table_name='luca_fields')
    op.drop_index(op.f('ix_luca_fields_collection'), table_name='luca_fields')
    op.drop_index('idx_luca_fields_collection_field', table_name='luca_fields')
    op.drop_table('luca_fields')
    op.drop_index(op.f('ix_luca_devices_status'), table_name='luca_devices')
    op.drop_index(op.f('ix_luca_devices_name'), table_name='luca_devices')
    op.drop_index(op.f('ix_luca_devices_group'), table_name='luca_devices')
    op.drop_index(op.f('ix_luca_devices_device_type'), table_name='luca_devices')
    op.drop_table('luca_devices')
    op.drop_index(op.f('ix_luca_content_status'), table_name='luca_content')
    op.drop_index(op.f('ix_luca_content_is_draft'), table_name='luca_content')
    op.drop_index(op.f('ix_luca_content_created_by'), table_name='luca_content')
    op.drop_index(op.f('ix_luca_content_collection'), table_name='luca_content')
    op.drop_index('idx_luca_content_created_by', table_name='luca_content')
    op.drop_index('idx_luca_content_collection_status', table_name='luca_content')
    op.drop_index('idx_content_collection_status_lastmod', table_name='luca_content')
    op.drop_table('luca_content')
    op.drop_index(op.f('ix_luca_users_username'), table_name='luca_users')
    op.drop_index(op.f('ix_luca_users_email'), table_name='luca_users')
    op.drop_index('idx_luca_users_username', table_name='luca_users')
    op.drop_index('idx_luca_users_email', table_name='luca_users')
    op.drop_table('luca_users')
    op.drop_index(op.f('ix_luca_taxonomy_vocabulary'), table_name='luca_taxonomy')
    op.drop_index(op.f('ix_luca_taxonomy_term'), table_name='luca_taxonomy')
    op.drop_table('luca_taxonomy')
    op.drop_table('luca_navigation')
    op.drop_table('luca_device_types')
    op.drop_table('luca_device_groups')
    op.drop_index('idx_luca_collections_hidden', table_name='luca_collections')
    op.drop_table('luca_collections')
    # ### end Alembic commands ###
